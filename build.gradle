import static org.gradle.api.tasks.testing.logging.TestLogEvent.FAILED
import static org.gradle.api.tasks.testing.logging.TestLogEvent.SKIPPED

buildscript {
    ext {
        kotlinVersion = '1.3.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}


allprojects {

    apply plugin: 'kotlin'
    // TODO: This should be in subprojects and not here
    apply plugin: 'kotlin-spring'
    apply plugin: 'idea'

    group = 'nu.westlin.kotlinlabs'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
    }

    configurations {
        all*.exclude group: "com.vaadin.external.google", module: "android-json"
    }
}

subprojects {
    tasks.withType(Test) {
        systemProperties = System.properties
    
        testLogging {
            events FAILED, SKIPPED
    
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    def output = "${desc.name} results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                    def startItem = '|  ', endItem = '  |'
                    def repeatLength = startItem.length() + output.length() + endItem.length()
                    println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                }
            }
        }
    }
}